name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

permissions:
  contents: write
  packages: write

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit
        cd mcp-server && pip install -e .
    
    - name: Run pre-commit
      run: |
        pre-commit run --all-files

  python-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'
    
    - name: Check Python syntax
      run: |
        python -m py_compile mcp-server/src/*.py

  tests:
    runs-on: ubuntu-latest
    needs: [pre-commit, python-check]
    env:
      EMBEDDING_MODEL: sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2
      VECTOR_SIZE: 384
      TRANSFORMERS_CACHE: "~/.cache/huggingface"
    services:
      qdrant:
        image: qdrant/qdrant:latest
        ports:
          - 6333:6333
          - 6334:6334

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'

    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-3.11-
          ${{ runner.os }}-pip-

    - name: Cache HuggingFace model cache
      uses: actions/cache@v4
      with:
        path: ${{ env.TRANSFORMERS_CACHE }}
        key: ${{ runner.os }}-hf-${{ env.EMBEDDING_MODEL }}
        restore-keys: |
          ${{ runner.os }}-hf-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd mcp-server && pip install -e .[test]

    - name: Wait for Qdrant
      run: |
        for i in {1..30}; do curl -fsS http://localhost:6333/readyz && break || sleep 2; done
        curl -fsS http://localhost:6333/ || (echo 'Qdrant not reachable' && exit 1)

    - name: Run tests
      env:
        QDRANT_URL: http://localhost:6333
        ENABLE_MEMORY_DECAY: true
        DECAY_WEIGHT: 0.3
        DECAY_SCALE_DAYS: 90
        MODEL_CACHE_DAYS: 7
        HF_HUB_ENABLE_HF_TRANSFER: '1'
        LOG_FILE: ${{ github.workspace }}/.pytest/results/mcp-server.log
        LOG_LEVEL: DEBUG
      run: |
        mkdir -p .pytest/results
        mkdir -p "$TRANSFORMERS_CACHE"
        ls -la "$TRANSFORMERS_CACHE"
        pytest -q \
          --junitxml=.pytest/results/junit.xml \
          --log-file=.pytest/results/pytest.log \
          --log-file-level=DEBUG \
          mcp-server/tests/test_integration_mcp_qdrant.py
        ls -la "$TRANSFORMERS_CACHE"

    - name: Upload test artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          .pytest/results/junit.xml
          .pytest/results/pytest.log
          .pytest/results/mcp-server.log
        if-no-files-found: warn
        retention-days: 7


  create-github-release:
    needs: tests
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Create release archive
      run: |
        mkdir -p /tmp/release
        tar -czf /tmp/release/claude-self-reflect-${{ github.event.release.tag_name }}.tar.gz \
          --exclude='node_modules' \
          --exclude='venv' \
          --exclude='.venv' \
          --exclude='.git' \
          --exclude='data' \
          --exclude='qdrant_storage' \
          --exclude='*.tar.gz' \
          --exclude='__pycache__' \
          --exclude='*.pyc' \
          --exclude='logs' \
          --exclude='.claude/agents' \
          .
        mv /tmp/release/claude-self-reflect-${{ github.event.release.tag_name }}.tar.gz .
    
    - name: Upload Release Asset
      uses: softprops/action-gh-release@v2
      with:
        files: ./claude-self-reflect-${{ github.event.release.tag_name }}.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
